package UITesting;
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import java.io.File;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.Duration;
import java.util.List;

public class ChromeUITesting {

    public static void main(String[] args) {
        ChromeDriver driver = new ChromeDriver();
        driver.manage().window().maximize();
        driver.get("https://www.getcalley.com/page-sitemap.xml");
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));

        // Find links in the sitemap
        List<WebElement> allLinks = driver.findElements(By.xpath("//url/loc"));

        // Ensure we have at least 5 links
        int numLinksToCapture = Math.min(5, allLinks.size());
        List<WebElement> topLinks = allLinks.subList(0, numLinksToCapture);

        // List of resolutions
        String[] desktopResolutions = {"1920x1080", "1366x768", "1536x864"};
        String[] mobileResolutions = {"360x640", "414x896", "375x667"};

        // Capture screenshots for each link in desktop resolutions
        for (WebElement link : topLinks) {
            for (String resolution : desktopResolutions) {
                captureScreenshot(driver, "Desktop", resolution, link.getText());
            }
        }

        // Capture screenshots for each link in mobile resolutions
        for (WebElement link : topLinks) {
            for (String resolution : mobileResolutions) {
                captureScreenshot(driver, "Mobile", resolution, link.getText());
            }
        }

        // Close the browser
        driver.quit();
    }

    public static void captureScreenshot(ChromeDriver driver, String device, String resolution, String url) {
        // Create folder structure
        String folderPath = "screenshots/" + device + "/" + resolution;
        File folder = new File(folderPath);
        // Create folders if they don't exist
        folder.mkdirs();

        // Generate current date and time
        LocalDateTime currentTime = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyyMMdd-HHmmss");
        String timestamp = currentTime.format(formatter);

        // Save screenshot with date-time stamp
        String screenshotName = folderPath + "/Screenshot-" + timestamp + "-" + url.replaceAll("[^a-zA-Z0-9.-]", "_") + ".png";

        // Resize browser window for specified resolution
        String[] dimension = resolution.split("x");
        int width = Integer.parseInt(dimension[0]);
        int height = Integer.parseInt(dimension[1]);
        driver.manage().window().setSize(new org.openqa.selenium.Dimension(width, height));

        // Navigate to the URL
        driver.get(url);

        // Take screenshot
        File screenshotFile = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
        try {
            // Save screenshot
            FileUtils.copyFile(screenshotFile, new File(screenshotName));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
